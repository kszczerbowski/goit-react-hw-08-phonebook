{"version":3,"file":"static/js/584.b8b78711.chunk.js","mappings":"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","sources":["components/ContactsArea/ContactsArea.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Loader/Loader.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/Loader/Loader.js","components/ContactList/ContactList.styled.js","components/ContactListElement/ContactListElement.styled.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/ContactsArea/ContactsArea.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactsArea = styled.div`\n  margin: auto auto 50px auto;\n  max-width: 40%;\n  min-width: 210px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: #e8e8e8;\n  overflow: hidden;\n  border-radius: 12px;\n  box-shadow: 7px 7px 10px 3px #24004628;\n  color: #240046;\n  font-weight: 500;\n  align-items: center;\n  padding-bottom: 20px;\n  @media (max-width: 765px) {\n    max-width: 90%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledFilterArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: left;\n  max-width: 50%;\n  margin: 10px 0px;\n`;\n\nexport const StyledLabel = styled.label`\n  margin: 0px 0px 10px 0px;\n  display: block;\n`;\n\nexport const StyledFilterInput = styled.input`\n  margin: 0px;\n`;\n","import React from 'react';\nimport {\n  StyledFilterArea,\n  StyledLabel,\n  StyledFilterInput,\n} from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onFilter = event => {\n    const newFilterValue = event.target.value;\n    dispatch(setFilter(newFilterValue));\n  };\n  return (\n    <StyledFilterArea>\n      <StyledLabel htmlFor=\"filterInput\">Find contacts by name</StyledLabel>\n      <StyledFilterInput\n        onChange={onFilter}\n        id=\"filterInput\"\n        type=\"text\"\n        name=\"filter\"\n      ></StyledFilterInput>\n    </StyledFilterArea>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  --height-of-loader: 4px;\n  --loader-color: #0071e2;\n  width: 30%;\n  height: var(--height-of-loader);\n  border-radius: 30px;\n  background-color: rgba(0, 0, 0, 0.2);\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    background: var(--loader-color);\n    top: 0;\n    left: 0;\n    width: 0%;\n    height: 100%;\n    border-radius: 30px;\n    animation: moving 1s ease-in-out infinite;\n  }\n  @keyframes moving {\n    50% {\n      width: 100%;\n    }\n\n    100% {\n      width: 0;\n      right: 0;\n      left: unset;\n    }\n  }\n`;\n\nexport const EmptyDiv = styled.div`\n  height: 4px;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.filter.filter;\n\nexport const getIsLoadingContacts = state => state.contacts.isLoading;\n\nexport const getFilteredAndSortedContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (contacts.length === 0) {\n      return contacts;\n    } else {\n      return contacts\n        .filter(contact => {\n          return contact.name?.toLowerCase().includes(filter.toLowerCase());\n        })\n        .sort((firstContact, secondContact) =>\n          firstContact.name.localeCompare(secondContact.name)\n        );\n    }\n  }\n);\n","import { StyledLoader, EmptyDiv } from './Loader.styled.js';\nimport { getIsLoadingContacts } from 'redux/contacts/selectors.js';\nimport { useSelector } from 'react-redux';\n\nexport const Loader = () => {\n  const isLoading = useSelector(getIsLoadingContacts);\n  if (isLoading) {\n    return <StyledLoader />;\n  } else {\n    return <EmptyDiv />;\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  padding: 0px;\n  max-width: 100%;\n  margin: 0px 10px;\n  text-align: left;\n  list-style-position: inside;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLI = styled.li`\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const StyledDeleteButton = styled.button`\n  margin-left: 10px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background: red;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.15);\n  background: #e62222;\n  transition: 200ms;\n  aspect-ratio: 1;\n  &:hover {\n    background: #ff3636;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const StyledSVG = styled.svg`\n  fill: #ffffff;\n`;\n","import React from 'react';\nimport {\n  StyledDeleteButton,\n  StyledSVG,\n  StyledLI,\n} from './ContactListElement.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListElement = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <StyledLI>\n      <span id=\"name\">{name}</span>: {number}\n      <StyledDeleteButton\n        onClick={() => {\n          onDeleteContact(id);\n        }}\n        type=\"button\"\n      >\n        <span>\n          <StyledSVG\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"></path>\n          </StyledSVG>\n        </span>\n      </StyledDeleteButton>\n    </StyledLI>\n  );\n};\nContactListElement.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n","import React from 'react';\nimport { StyledContactList } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactListElement } from 'components/ContactListElement/ContactListElement';\nimport { getFilteredAndSortedContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const filteredAndSortedContacts = useSelector(getFilteredAndSortedContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <StyledContactList id=\"contactsList\">\n      {filteredAndSortedContacts.map(contact => (\n        <ContactListElement\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </StyledContactList>\n  );\n};\n","import { StyledContactsArea } from './ContactsArea.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport const ContactsArea = () => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <StyledContactsArea>\n        <Filter />\n        <Loader />\n        <ContactList />\n      </StyledContactsArea>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInputArea = styled.div`\n  margin: auto;\n  max-width:40%;\n  min-width: 210px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: #240046;\n  max-height: 420px;\n  overflow: hidden;\n  border-radius: 12px;\n  box-shadow: 7px 7px 10px 3px #24004628;\n  @media (max-width: 765px) {\n    max-width: 90%\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  padding: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  display: block;\n  margin: auto;\n  max-width: 80%;\n`;\n\nexport const StyledLabel = styled.label`\n  margin: auto;\n  display: block;\n  font-weight: 500;\n  color: #FFFFFF;\n`;\n\nexport const StyledAddButton = styled.button`\n  margin: auto;\n  height: 40px;\n  color: #fff;\n  background: #573b8a;\n  font-size: 1rem;\n  font-weight: bold;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: .2s ease-in;\n  padding: 0px 30px 0px 30px;\n  &:hover {\n    cursor: pointer;\n    background-color: #6d44b8;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledInputArea,\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n  StyledAddButton,\n} from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const contactName = form.elements.name.value;\n    const contactNumber = form.elements.number.value;\n    if (contacts.map(contact => contact.name).includes(contactName)) {\n      window.alert(`${contactName} is already in contacts!`);\n    } else {\n      dispatch(addContact({ name: contactName, number: contactNumber }));\n    }\n    form.reset();\n    document.querySelector('input#nameInput').focus();\n  };\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <StyledInputArea>\n        <StyledForm onSubmit={onSubmit}>\n          <StyledLabel htmlFor=\"nameInput\">Name</StyledLabel>\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id=\"nameInput\"\n          />\n          <StyledLabel htmlFor=\"phoneInput\">Phone number</StyledLabel>\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id=\"phoneInput\"\n          />\n          <StyledAddButton type=\"submit\">Add contact</StyledAddButton>\n        </StyledForm>\n      </StyledInputArea>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledUserMenu = styled.div`\n  position: absolute;\n  right: 5px;\n  background-color: rgb(36, 0, 70);\n  border-radius: 12px;\n  box-shadow: rgba(36, 0, 70, 0.157) 3.5px 3.5px 5px 3px;\n  padding: 0px 20px;\n  top: 50px;\n`;\n\nexport const StyledGreeting = styled.p`\n  font-weight: 500;\n  color: #ffffff;\n`;\n","import React from 'react';\nimport { StyledUserMenu, StyledGreeting } from './UserMenu.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\n\nexport const UserMenu = () => {\n  const user = useSelector(selectUser);\n  const userEmail = user.email;\n  return (\n    <StyledUserMenu>\n      <StyledGreeting>Hello {userEmail}!</StyledGreeting>\n    </StyledUserMenu>\n  );\n};\n","import React from 'react';\nimport { ContactsArea } from 'components/ContactsArea/ContactsArea';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { UserMenu } from 'components/UserMenu/UserMenu';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nexport default function ContactsPage() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <>\n      {isLoggedIn && <UserMenu />}\n      <ContactForm />\n      <ContactsArea />\n    </>\n  );\n}\n"],"names":["StyledContactsArea","styled","StyledFilterArea","StyledLabel","StyledFilterInput","Filter","dispatch","useDispatch","htmlFor","onChange","event","newFilterValue","target","value","setFilter","id","type","name","StyledLoader","EmptyDiv","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","getIsLoadingContacts","isLoading","getFilteredAndSortedContacts","filter","contact","toLowerCase","includes","sort","firstContact","secondContact","localeCompare","Loader","useSelector","StyledContactList","StyledLI","StyledDeleteButton","StyledSVG","ContactListElement","number","onClick","deleteContact","xmlns","width","height","viewBox","d","ContactList","filteredAndSortedContacts","useEffect","fetchContacts","ContactsArea","StyledInputArea","StyledForm","StyledInput","StyledAddButton","ContactForm","onSubmit","preventDefault","form","contactName","elements","contactNumber","window","alert","addContact","reset","document","querySelector","focus","pattern","title","required","StyledUserMenu","StyledGreeting","UserMenu","userEmail","selectUser","email","ContactsPage","isLoggedIn","selectIsLoggedIn"],"sourceRoot":""}