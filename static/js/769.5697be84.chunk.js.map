{"version":3,"file":"static/js/769.5697be84.chunk.js","mappings":"iOAEaA,EAAaC,EAAAA,GAAAA,KAAH,gbAqBVC,EAAqBD,EAAAA,GAAAA,KAAH,kMAUlBE,EAAcF,EAAAA,GAAAA,MAAH,kRAeXG,EAAiBH,EAAAA,GAAAA,IAAH,4FAMdI,EAAcJ,EAAAA,GAAAA,MAAH,+DAKXK,EAAiBL,EAAAA,GAAAA,MAAH,yEAKdM,EAAeN,EAAAA,GAAAA,OAAH,4T,uCClDZO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,UAACV,EAAD,CAAYW,SArBO,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MAClCG,EAAkBP,EAAKG,SAASI,gBAAgBH,MAChDI,EAAcR,EAAKG,SAASK,YAAYC,QAC1CH,IAAaC,GAIG,IAAhBC,GAIJb,GAASe,EAAAA,EAAAA,IAAS,CAAER,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KACjCN,EAAKW,SAJHC,EAAAA,OAAAA,QAAe,6CAJfA,EAAAA,OAAAA,QAAe,sCASlB,EAGC,WACE,SAACxB,EAAD,wBACA,SAACC,EAAD,CAAawB,KAAK,OAAOX,KAAK,OAAOY,YAAY,UACjD,SAACzB,EAAD,CAAawB,KAAK,QAAQX,KAAK,QAAQY,YAAY,mBACnD,SAACzB,EAAD,CAAawB,KAAK,WAAWX,KAAK,WAAWY,YAAY,cACzD,SAACzB,EAAD,CACEwB,KAAK,WACLX,KAAK,kBACLY,YAAY,sBAGd,UAACxB,EAAD,YACE,SAACE,EAAD,CAAgBU,KAAK,cAAcW,KAAK,cACxC,SAACtB,EAAD,CAAawB,QAAQ,cAArB,iDAIF,SAACtB,EAAD,yBAGL,ECtDc,SAASuB,IACtB,OAAO,SAACtB,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background-color: white;\n  padding: 3.125em;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 5px 5px 15px -1px rgba(0, 0, 0, 0.75);\n  max-width: 30%;\n  margin: 40px auto;\n  @media (max-width: 800px) {\n    max-width: 50%;\n  }\n  @media (max-width: 800px) {\n    max-width: 50%;\n  }\n  @media (max-width: 500px) {\n    max-width: 70%;\n  }\n`;\n\nexport const StyledRegisterSpan = styled.span`\n  color: rgb(77, 75, 75);\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  display: block;\n  font-weight: bold;\n  font-size: x-large;\n  margin-bottom: 0.5em;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  margin-bottom: 1.25em;\n  height: 20px;\n  border-radius: 5px;\n  border: 1px solid gray;\n  padding: 0.6em;\n  font-family: 'Inter', sans-serif;\n  outline: none;\n  &focus: {\n    border: 1px solid #639;\n    outline: none;\n  }\n`;\n\nexport const StyledTermsBox = styled.div`\n  display: flex;\n  margin-bottom: 1.25em;\n  align-items: center;\n`;\n\nexport const StyledLabel = styled.label`\n  color: grey;\n  accent-color: #639;\n`;\n\nexport const StyledCheckbox = styled.input`\n  margin-right: 0.625em;\n  accent-color: #639;\n`;\n\nexport const StyledButton = styled.button`\n  width: 50%;\n  padding: 0.625em;\n  border-radius: 5px;\n  color: white;\n  background-color: #639;\n  border: 1px dashed #639;\n  cursor: pointer;\n  &hover: {\n    color: #639;\n    background-color: white;\n    border: 1px dashed #639;\n    cursor: pointer;\n    transition: 0.5s;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledForm,\n  StyledRegisterSpan,\n  StyledInput,\n  StyledTermsBox,\n  StyledLabel,\n  StyledCheckbox,\n  StyledButton,\n} from './RegisterForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    const passwordConfirm = form.elements.passwordConfirm.value;\n    const okayToTerms = form.elements.okayToTerms.checked;\n    if (password !== passwordConfirm) {\n      Notify.failure('Both passwords need to be the same!');\n      return;\n    }\n    if (okayToTerms !== true) {\n      Notify.failure('You need to accept the terms to register!');\n      return;\n    }\n    dispatch(register({ name, email, password }));\n    form.reset();\n  };\n  // hasło minimum 7 znaków, jedna duża litera i cyfra, zrób funkcję handleBlur czy coś\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledRegisterSpan>Register</StyledRegisterSpan>\n      <StyledInput type=\"name\" name=\"name\" placeholder=\"Name\" />\n      <StyledInput type=\"email\" name=\"email\" placeholder=\"Email address\" />\n      <StyledInput type=\"password\" name=\"password\" placeholder=\"Password\" />\n      <StyledInput\n        type=\"password\"\n        name=\"passwordConfirm\"\n        placeholder=\"Confirm password\"\n      />\n\n      <StyledTermsBox>\n        <StyledCheckbox name=\"okayToTerms\" type=\"checkbox\" />\n        <StyledLabel htmlFor=\"okayToTerms\">\n          I agree to terms and conditions\n        </StyledLabel>\n      </StyledTermsBox>\n      <StyledButton>Register</StyledButton>\n    </StyledForm>\n  );\n};\n\n// export default RegisterForm;\n","import React from 'react';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["StyledForm","styled","StyledRegisterSpan","StyledInput","StyledTermsBox","StyledLabel","StyledCheckbox","StyledButton","RegisterForm","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","name","elements","value","email","password","passwordConfirm","okayToTerms","checked","register","reset","Notify","type","placeholder","htmlFor","RegisterPage"],"sourceRoot":""}